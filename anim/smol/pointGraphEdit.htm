<!doctype html><html><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta name="viewport" content="width=device-width, user-scalable=yes, minimum-scale=1.0, maximum-scale=10.0">
<script src="/conet.js"></script>
<script src="/menu.js"></script>
</head>
<body bgcolor="#aaaaaa">

<script type="text/javascript">
(function() {
  //---
  var mx=-1,my=-1,canv,dpr,
      maddp,pts=[{x:0,y:0},{x:100,y:100}],md=false,
      nearpi=-1,sel=undefined,lskey='pointGraph',
      data=[
        {s:'Freq',c:'#4a4',pts:pts},
        {s:'Gain',c:'#44c',pts:[{x:0,y:100},{x:100,y:0}]}
      ],datai=0,lskeyData='pointGraphData';
  
  function draw() {
    var ct=canv.getContext('2d'),
        w=canv.width,h=canv.height;
    
    ct.fillStyle='#ccc';
    ct.fillRect(0,0,w,h);
    
    ct.strokeStyle='#888';
    ct.beginPath();
    ct.moveTo(mx,0);ct.lineTo(mx,h);
    ct.moveTo(0,my);ct.lineTo(w,my);
    ct.stroke();
    
    for (var dh of data) {
      ct.strokeStyle=dh.c;
      ct.beginPath();
      for (var i=0;i<dh.pts.length;i++) {
        var p=dh.pts[i];
        if (i==0) ct.moveTo(p.x,p.y); 
         else ct.lineTo(p.x,p.y);
      }
      ct.stroke();
    }
    
    ct.strokeStyle='#888';
    
    if (sel) {
      var p=pts[sel.pi];
      var w0=20*dpr;
      ct.strokeRect(p.x-w0/2,p.y-w0/2,w0,w0);
    }
    
    if (nearpi!=-1) {
      var p=pts[nearpi];
      var w0=10*dpr;
      ct.strokeRect(p.x-w0/2,p.y-w0/2,w0,w0);
    }
    
    var pw=3*dpr;
    for (var p of pts) {
      ct.fillStyle='#000';
      ct.fillRect(p.x-pw/2,p.y-pw/2,pw,pw);
    }
    //...
  }
  
  function examples() {
    
    // distorted [{"x":21,"y":289.5},{"x":45,"y":231},{"x":64.5,"y":273},{"x":97.5,"y":274.5},{"x":126,"y":24},{"x":169.5,"y":58.5},{"x":189,"y":18},{"x":219,"y":48},{"x":250,"y":16},{"x":274.5,"y":57},{"x":304.5,"y":16.5},{"x":304.5,"y":270},{"x":331.5,"y":228},{"x":355.5,"y":267},{"x":378,"y":214.5},{"x":397.5,"y":270},{"x":411,"y":13.5},{"x":432,"y":274.5},{"x":462,"y":15},{"x":484.5,"y":271.5}]
    // chirp [{"x":9,"y":13},{"x":23,"y":290},{"x":34,"y":12},{"x":53,"y":270},{"x":60,"y":46},{"x":79,"y":244},{"x":85,"y":83},{"x":105,"y":223},{"x":116,"y":105},{"x":129,"y":208},{"x":146,"y":122},{"x":169,"y":209},{"x":187,"y":150},{"x":217,"y":197},{"x":238,"y":160},{"x":264,"y":194},{"x":293,"y":162},{"x":320,"y":195},{"x":333,"y":175},{"x":351,"y":195},{"x":372,"y":186},{"x":389,"y":194},{"x":404,"y":143},{"x":412,"y":243},{"x":426,"y":157},{"x":435,"y":216},{"x":449,"y":175},{"x":464,"y":192}]
    // klappezu [{"x":9,"y":13},{"x":23,"y":290},{"x":34,"y":12},{"x":53,"y":270},{"x":60,"y":46},{"x":79,"y":244},{"x":85,"y":83},{"x":105,"y":223},{"x":116,"y":105},{"x":129,"y":208},{"x":146,"y":122},{"x":169,"y":209},{"x":193,"y":45},{"x":228,"y":74},{"x":255,"y":14},{"x":278,"y":71},{"x":301,"y":32},{"x":328,"y":195},{"x":339,"y":180},{"x":356,"y":224},{"x":374,"y":223},{"x":386,"y":287},{"x":414,"y":270},{"x":427,"y":290},{"x":444,"y":227},{"x":454,"y":286},{"x":466,"y":263},{"x":489,"y":292}]
    
    //...
  }
  
  function init() {
    //...
    var c=document.createElement('canvas'),w=500,h=300,
        st=c.style;
    dpr=window.devicePixelRatio;
    c.width=w;c.height=h;canv=c;
    
    var s=localStorage[lskey];
    if (s!==undefined) {
      pts=JSON.parse(s);
      data[datai].pts=pts;
    }
    
    var s=localStorage[lskeyData];
    if (s!=undefined) {
      data=JSON.parse(s);
      pts=data[datai].pts;
    }
    
    
    //var ct=c.getContext('2d');
    //ct.fillStyle='#0ff';
    //ct.fillRect(0,0,w,h);
    draw();
    
    st.width=(w/dpr)+'px';
    st.height=(h/dpr)+'py';
    document.body.appendChild(c);
    
    var ce=window;//c
    ce.addEventListener('mousedown',mouseDown);
    ce.addEventListener('mousemove',mouseMove);
    ce.addEventListener('mouseup',mouseUp);
    
    Menu.init([
      maddp={checkbox:1,ms:'Add Points',checked:0},
    {s:'Del Point',actionf:function() {
      if (!sel) { alert('No point selected.');return; }
      pts.splice(sel.pi,1);
      sel=undefined;
      draw();
    }
    },{s:'Test sound',actionf:function() {
      var fa=[],w=canv.width,h=canv.height,ga=[];
      for (var p of data[0].pts) fa.push([100+4000*(h-p.y)/h,500*p.x/w]);
      for (var p of data[1].pts) {
        var v=0+1*(h-p.y)/h;
        v*=v*v;
        ga.push([v,500*p.x/w]);
      }
      
      //onsole.log(ga);
      Conet.beep({
        time:Math.max(fa[fa.length-1][1],ga[ga.length-1][1]),
        freqAtTime:fa,
        gainAtTime:ga,
      });
    }
    },{s:'ImpExport',doctrl:'Point Set Data (Json)',wrap:1,ta:1,jsonCheck:1,valuef:function() {
      for (var dh of data)
      for (var p of dh.pts) { delete(p.ox);delete(p.oy); }
      return JSON.stringify(data);
    }
    ,setfunc:function(v) {
      //pts=JSON.parse(v);
      data=JSON.parse(v);
      nearpi=-1;sel=undefined;
      //data[datai].pts=pts;
      draw();
    }
    },{s:'PointSet',ms:'Freq',autoval:2,sub:[{s:'Freq'},{s:'Gain'}],setfunc:function(v) {
      //---
      datai={Freq:0,Gain:1}[v];
      pts=data[datai].pts;nearpi=-1;sel=undefined;
      draw();
      console.log(v+' '+datai);
      //...
    }
    }
    ],{listen:1});
    
    
    console.log('PointGraphEdit v.0.145 ');//FOLDORUPDATEVERSION
    
    //...
  }
  
  function mouseDown(e) {
    //...
    if (e.target!==canv) return;
    md=true;
    var x=e.offsetX,y=e.offsetY;
    mx=x*dpr;my=y*dpr;
    
    if (maddp.checked) {
      //onsole.log('add point nao.');
      var pn={x:mx,y:my};
      for (var i=0;i<pts.length;i++) {
        if (pts[i].x>=pn.x) {
          pts.splice(i,0,pn);pn=undefined;
          sel={pi:i};
          break;
        }
      }
      if (pn) { pts.push(pn);sel={pi:pts.length-1}; }
      draw();
    } else {
      var p=pts[nearpi];
      sel={pi:nearpi,omx:mx,omy:my,opx:p.x,opy:p.y};
      for (var i=nearpi+1;i<pts.length;i++) {
        p=pts[i];p.ox=p.x;
      }
      draw();
    }
    //...
  }
  
  function mouseMove(e) {
    //---
    //onsole.log(e);
    var x=e.offsetX,y=e.offsetY;
    //var x=e.layerX,y=e.layerY;
    mx=x*dpr;my=y*dpr;
    //console.log(x+' '+y);
    if (maddp.checked) {
      nearpi=-1;
    } else {
      if (md&&sel) {
        var p=pts[sel.pi];
        var nx=sel.opx+mx-sel.omx;
        if (sel.pi>0) nx=Math.max(nx,pts[sel.pi-1].x);
        p.x=nx;
        p.y=sel.opy+my-sel.omy;
    
    
        for (var i=sel.pi+1;i<pts.length;i++) {
          var ph=pts[i];
          ph.x=ph.ox+p.x-sel.opx;
        }
    
    
      } else {
        var mind=Number.MAX_VALUE,ni=-1;
        for (var i=0;i<pts.length;i++) {
          var p=pts[i],dx=p.x-mx,dy=p.y-my,d=dx*dx+dy*dy;
          if (d>=mind) continue;
          mind=d;ni=i;
        }
        nearpi=ni;
      }
    }
    
    
    draw();
    //...
  }
  
  function mouseUp(e) {
    md=false;
    //localStorage[lskey]=JSON.stringify(pts);
    localStorage[lskeyData]=JSON.stringify(data);
    //onsole.log('mouseup');
    //...
  }
  
  init();
  //...
}
)();
</script>

</body>
</html><script>
//fr o,9
//fr o,9,9
//fr o,9,11
//fr o,9,13
//fr o,9,13,36
//fr o,9,13,37
//fr o,9,13,38
//fr o,9,13,39
//fr o,9,15
//fr o,9,17
//fr o,9,19
//fr p,8,116
