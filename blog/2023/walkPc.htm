<!DOCTYPE html><html lang="en"><head>
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0">
<style>
body { color: #000;background-color: #fff;margin: 0px;overflow: hidden; }
</style>
<script src="/three/r143/build/three.min.js"></script>
<script src="/three/r143/examples/js/libs/stats.min.js"></script>
<script src="/three/r143/examples/js/controls/OrbitControls.js"></script>
<script src="/three/r143/examples/js/loaders/GLTFLoader.js"></script>
</head><body>
<div id="container"></div>
<script>
(function() {
  //---
  function init() {
    
    //script src="https://threejs.org/build/three.min.js">/script>  //r124
    //script src="https://threejs.org/examples/js/libs/stats.min.js">/script> //r109
    //script src="https://threejs.org/examples/js/controls/OrbitControls.js">/script>  //v81
    
    
    var camera,controls,scene,renderer,stats;
    
    scene = new THREE.Scene();
    renderer = new THREE.WebGLRenderer({antialias:true});
    renderer.setClearColor( 0x888888 );
    renderer.shadowMap.enabled=true;
    renderer.shadowMap.type=THREE.BasicShadowMap;
    renderer.outputEncoding=THREE.sRGBEncoding;
    //				renderer.shadowMapEnabled=true;
    //				renderer.shadowMapType=THREE.PCFShadowMap;//PCFShadowMap;
    
    renderer.setPixelRatio( window.devicePixelRatio );
    renderer.setSize( window.innerWidth, window.innerHeight );
    
    var container=document.body//document.getElementById('container')
      ,ms=[];
    container.appendChild( renderer.domElement );
    
    camera=new THREE.PerspectiveCamera(90,window.innerWidth/window.innerHeight,1,1000);
    camera.position.z=500;
    
    if (1) {
    controls=new THREE.OrbitControls(camera,renderer.domElement);
    controls.enableDamping=true;
    controls.dampingFactor=0.25;
    controls.enableZoom=true;
    controls.enablePan=true;
    controls.maxDistance=600;
    controls.rotateSpeed=0.4;
    }
    
    var m0=new THREE.MeshPhongMaterial( { color:0x666666,flatShading:true } ),
        m1=new THREE.MeshPhongMaterial({color:0x77dd77,flatShading:true,
          transparent:true,opacity:0.7});
    
    var bw=20;//,sw=15,sw2=(sw-1)/2,bh=bw/2;//20,15
    
    function box(x,y,z,w,h,b,m) {
      mesh=new THREE.Mesh(new THREE.BoxGeometry(w,h,b),m);
      mesh.position.set(x,y,z);
      mesh.updateMatrix();
      mesh.matrixAutoUpdate = false;
      mesh.castShadow=true;
      mesh.receiveShadow=true;
      scene.add(mesh);
      return mesh;
    }
    
    
    function resize() {
      camera.aspect=window.innerWidth/window.innerHeight;
      camera.updateProjectionMatrix();
      renderer.setSize(window.innerWidth,window.innerHeight);
    }
    function animate() {
      requestAnimationFrame( animate );
      if (controls) controls.update(); // required if controls.enableDamping = true, or if controls.autoRotate = true
      stats.update();
      render();
    }
    function render() {
      renderer.render(scene,camera);
    }
    
    
    //if (1) { box0(-1,0,-1,1,1,1,m1);box0(15,0,-1,1,1,1,m1);
    //         box0(-1,0,15,1,1,1,m1);box0(15,0,15,1,1,1,m1); }
    
    box(0,-80,0,50,100,50,m1);
    box(60,-80,0,50,100,50,m1);
    box(0,-80,60,50,100,50,m1);
    
    box(0,-150,0,600,bw,600,m0).castShadow=false;
    
    var l=new THREE.AmbientLight(0x555555),f=3;scene.add(l);
    l=new THREE.PointLight(0xffffff,1,0);l.position.set(-100*f,200*f,100*f);scene.add(l);
    l=new THREE.PointLight(0xffffaa,1,0);l.position.set(100*f,100*f,100*f);
    l.castShadow=true;
    l.shadow.camera.near=100;
    l.shadow.camera.far=1000;
    l.shadow.mapSize.width=1024;//2048;
    l.shadow.mapSize.height=1024;
    scene.add(l);
    l=new THREE.PointLight(0xaaffff,1,0);l.position.set(100*f,-200*f,-100*f);scene.add(l);
    
    
    stats = new Stats();
    stats.domElement.style.position = 'absolute';
    stats.domElement.style.top = '0px';
    stats.domElement.style.zIndex = 100;
    container.appendChild(stats.domElement);
    
    window.addEventListener('resize',resize,false);
    animate();
    
    const loader=new THREE.GLTFLoader();
    loader.setPath('/blog/2023/');
    loader.load('20.02.2023.glb',
    function(gltf) {
      //---
      const sc=500;
      gltf.scene.scale.set(sc,sc,sc);
      scene.add(gltf.scene);
      //...
    }
    );
    //onsole.log(loader);
    
  }
  init();
  //...
}
)();
</script></body>
</html><script>
//fr o,13
//fr o,13,1
//fr o,13,1,43
//fr o,13,1,47
//fr p,36,40
