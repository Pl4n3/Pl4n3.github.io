<html>
<head>
<meta http-equiv="content-type" content="text/html; charset=ISO-8859-1">
<meta name="viewport" content="width=device-width, user-scalable=no, minimum-scale=1, maximum-scale=1">
<link rel="shortcut icon" sizes="192x192" href="santa.png">
<link rel="apple-touch-icon" href="santa.png">
<style>
html, body { font-family:Sans-serif;border:0;margin:0;height:100%;height:100%; }
</style>
<script src='bod2.js'></script>
<script src='../../sound.js'></script>
<script src='../../conet.js'></script>
<script src='../../menu.js'></script>
<script>
//--- jr.htm, copy of santa.htm, to parametrize content and 
//--- extend mechanics (fight,jump,crouch)
function jnr() {
  var fos={},//---file objects (unparsed json)
      mapfn='maps/gen0test.json',
      loadCount=0,loadFiles=['objs/gen0/o.json'],
      url=Conet.parseUrl();
  
  function onload() {
    //---
    var img,mleft,mright,mattack,mdown,linp=0,t=0,inpt=[],stayinp=0,bgimg;
    
    var imgGround=new Image();imgGround.src='../paint/ground.png';
    var imgShadow=new Image();imgShadow.src='../paint/shadow.png';
    
    var flc=[];
    var w=21,h=21,w2=Math.floor(w/2),h2=Math.floor(h/2);
    for (var k=0;k<5;k++) {
      var cv0=document.createElement('canvas');
      cv0.width=w;cv0.height=h;
      var ct=cv0.getContext('2d');
      var id=ct.createImageData(w,h);
      //for (var y=0;y<h;y++) for (var x=0;x<w;x++) {
      //  var i=(y*w+x)*4;
      //  id.data[i]=255;
      //  id.data[i+1]=255;
      //  id.data[i+2]=0;
      //  id.data[i+3]=255*(1-Math.abs(y/h2-1))*(x<h2?x/h2:1)*(x>w-h2?1-(x-w+h2+1)/h2:1);
      //}
      for (var j=(w*h)/20;j>=0;j--) {
        var x=Math.floor(0.5+Math.random()*w/2),y=Math.floor(0.5+Math.random()*h/2);
        var i;
        if ((x*x+y*y)>(w*w/4)) continue;
        i=((w2-y)*w+(w2-x))*4;id.data[i]=255;id.data[i+1]=255;id.data[i+2]=255;id.data[i+3]=255;
        i=((w2-x)*w+(w2-y))*4;id.data[i]=255;id.data[i+1]=255;id.data[i+2]=255;id.data[i+3]=255;
        i=((w2-y)*w+(w2+x))*4;id.data[i]=255;id.data[i+1]=255;id.data[i+2]=255;id.data[i+3]=255;
        i=((w2-x)*w+(w2+y))*4;id.data[i]=255;id.data[i+1]=255;id.data[i+2]=255;id.data[i+3]=255;
        i=((w2+y)*w+(w2-x))*4;id.data[i]=255;id.data[i+1]=255;id.data[i+2]=255;id.data[i+3]=255;
        i=((w2+x)*w+(w2-y))*4;id.data[i]=255;id.data[i+1]=255;id.data[i+2]=255;id.data[i+3]=255;
        i=((w2+y)*w+(w2+x))*4;id.data[i]=255;id.data[i+1]=255;id.data[i+2]=255;id.data[i+3]=255;
        i=((w2+x)*w+(w2+y))*4;id.data[i]=255;id.data[i+1]=255;id.data[i+2]=255;id.data[i+3]=255;
      }
      var ct=cv0.getContext('2d');
      ct.putImageData(id,0,0);
      flc.push(cv0);
    }
    
    var bod2=new Bod2();
    bod2.init({w:1600,h:1600});
    
    //console.log(dataGen0());
    var map=JSON.parse(fos[mapfn]);
    
    var skins={};
    for (var i=0;i<map.os.length;i++) {
      var ps=map.os[i];
      if (ps.ofn) {
        var osh=fos[ps.ofn];
        if (osh===undefined) {
          console.error(ps.ofn+' not loaded.');
          continue;
        }
        try {
          ps.o=JSON.parse(osh);
        } catch (e) {
          console.log(ps.ofn);
          console.log(osh);
          console.log(e);
          continue;
        }
      }
      if (!ps.o) continue;
      var u=bod2.loadUnit(ps.o,ps.x,ps.y);
      u.shadowImg=imgShadow;u.dbg=1;
      u.shsc=ps.shsc;
      u.sc=ps.sc||1;
      u.hp=ps.hp;u.mhp=ps.hp;
      if (ps.skin) { u.skin=ps.skin;skins[ps.skin]=1; }
      bod2.setFc(u,'idle');
      //reak;
    }
    
    for (var k in skins) if (skins.hasOwnProperty(k)) 
    Conet.download({fn:k,f:function(v) {
      var d=JSON.parse(v);
      img=new Image();
      img.src=d.data;
      //onsole.log(d.tridata);
      
      
      var i1=[4,5,0,    1,3,2,    6,16,15,17,  14,13,
              27,28,25, 26,23,24, 22,29,21,18, 20,19, 30,31,32,33,34, 35,36,37,38, 39,40,41,42, 43,44,   54,45,47,46, 48,50,49,51, 52,53];
      var i0=[3,4,5,    6,8,7,    10,11,12,9,  13,14,
              3,4,5,    6,8,7,    10,11,12,9,  13,14, 19,17,18,15,16, 29,28,26,27, 25,23,24,22, 21,20,   29,28,26,27, 25,23,24,22, 21,20];
      
      
      //onsole.log('santa.img oload bod2.units.length='+bod2.units.length);
      for (var ui=bod2.units.length-1;ui>=0;ui--) {
        //if (ui==0) continue;
        var u=bod2.units[ui];
        if (u.skin!=this.fn) continue;
        u.dbg=0;
      
        if (this.fn=='santa.json.txt') {
          for (var i=0;i<i0.length;i++) {
            var v=d.tridata.verts[i0[i]],w=u.verts[i1[i]];
            w.u=v[0];w.v=v[1];
          }
      
          var v;
          v=u.verts[7];v.u=0.36;v.v=0.46;
          v=u.verts[11];v.u=0.05;v.v=0.1;
          v=u.verts[10];v.u=-0.05;v.v=0.6;
      
          v=u.verts[12];v.u=0.6;v.v=0.1;
          v=u.verts[8];v.u=0.7;v.v=0.6;
          v=u.verts[9];v.u=0.3;v.v=0.8;
        } else {
          for (var i=0;i<d.tridata.verts.length;i++) {
            var v=d.tridata.verts[i],w=u.verts[i];
            w.u=v[0];w.v=v[1];
          }
        }
      
        //onsole.log('santa.img onload u.polys.length='+u.polys.length);
        if (!u.dbg) for (var i=u.polys.length-1;i>=0;i--) u.polys[i].img=img;
      }
      
    }
    });
    
    if (1)
    Conet.download({fn:'/blog/img/night0.json.txt',f:function(v) {
      v=JSON.parse(v);
      var img=new Image();
      img.src=v.data;
      img.onload=function() {
        //onsole.log(img);
        bgimg=img;
        //...
      }
      //...
    }
    });
    
    for (var i=0;i<map.os.length;i++) {
      var st=map.os[i];
      if (st.o||st.jpad) continue;
      st.img=imgGround;
      bod2.stones.push(st);
    }
    
    for (var i=0;i<map.os.length;i++) {
      var ps=map.os[i];
      if (!ps.jpad) continue;
      if (ps.shadowImg==1) ps.shadowImg=imgShadow;
      bod2.jpads.push(ps);
    }
    
    ////{x:20,y:450,w:80,h:50,dx:25,dy:-50}
    ////bod2.jpads.push({x:0,y:1450,w:100,h:120,dx:25,dy:-50,shadowImg:imgShadow});
    //bod2.jpads.push({x:0,y:1450,w:100,h:120,dx:0,dy:-60,shadowImg:imgShadow});
    //bod2.jpads.push({x:0,y:0,w:120,h:120,dx:20,dy:0});
    //bod2.jpads.push({x:200,y:700-120,w:100,h:120,dx:60,dy:-70,shadowImg:imgShadow});
    
    var flakes=[],fc=50;
    for (var i=0;i<fc;i++) {
      var f=i/(fc-1);f*=f*f*f*f*f*f;
      flakes.push({w:21+79*f,ox:Math.random(),oy:Math.random(),img:flc[i%flc.length]});
    }
    
    function ai(u,ui) {
      var uf=bod2.units[0];
      
      var ret=0;
      var dx=uf.mx-u.mx,adx=Math.abs(dx);
      if (uf.mx<u.mx) {
        if (u.mirror||(adx>100)) ret=1;
      } else {
        if ((!u.mirror)||(adx>100)) ret=2;
      }
      
      if (ret==0) {
        if ((linp==3))//||(Math.random()<0.001)) if random duck, then duck longer..
          ret=4;
        else {
          if ((u.aiat||0)<=0) { ret=3;u.aiat=100+Math.random()*500; }
          u.aiat--;
        }
      }
      
      //
      return ret;
    }
    
    
    bod2.extCalc=function(dt) {
      
      t+=dt;
      
      for (var ui=bod2.units.length-1;ui>=0;ui--) {
        var u=bod2.units[ui],mx=u.mx,my=u.my,keepRunning=false;//ui>0;
        if (!u.currentFc) {
          //---
          if ((u.floatt||0)>0) {
            u.floatt-=dt;
            if (u.floatt>0) continue;
          }
          var d=(mx-u.omx)*(mx-u.omx)+(my-u.omy)*(my-u.omy);
          if (d<0.5) bod2.setFc(u,u.fch['up']?'up':(keepRunning?'run':'idle'));
          u.omx=mx;u.omy=my;
          continue;//return;
        }
        if (u.currentFc.name=='up') {
          if (!u.currentFc.first) bod2.setFc(u,(keepRunning?'run':'idle'));
        }
      
      
      if (!u.currentFc) continue;
      var fcn=u.currentFc.name;
      var inp;
      if (ui==0) {
      //console.log('jnr.extCalc mleft.on='+mleft.on);
      inp=((mleft.on&&mright.on)?0:(mleft.on?1:(mright.on?2:(mattack.on?3:(mdown.on?4:0)))));
      //onsole.log('jnr.extCalc inp='+inp+' '+u.linp);
      //if (inp!=linp) { linp=inp;
      //  if (inp==1) { var s=u.mirror?'idle':'run';if ((s!=fcn)||u.mirror)  { u.mirror=false;bod2.setFc(u,s); }} else
      //  if (inp==2) { var s=u.mirror?'run':'idle';if ((s!=fcn)||!u.mirror) { u.mirror=true;bod2.setFc(u,s); }} }
      
      //onsole.log('jnr.extCalc inp='+inp+' linp='+linp+' stayinp='+stayinp);
      
      //t+=dt;
      if (inp!=linp) {
        if (inp==0) {
          if (!stayinp) {
            var lt=inpt[linp];
            if (lt) {
              if (t-lt<300) {
                stayinp=linp;
                //onsole.log('extCalc 0 stayinp='+stayinp);
              }
            }
          }
          if (!stayinp) inpt[linp]=t;
        } else {
          if (stayinp) {
            stayinp=0;
            //onsole.log('extCalc 1 stayinp='+stayinp);
          } //else inpt[inp]=t;
        }
        linp=inp;
      }
      if (stayinp) inp=stayinp;
      
      } else {
        if ((!u.linp)||((u.tinp||0)<=0)) {
          inp=ai(u,ui);u.tinp=200;u.linp=inp;
        } else 
          inp=u.linp;
        u.tinp-=dt;
      }
      
      //onsole.log('jnr.extCalc inp='+inp+' '+linp);
      
      if (inp==3) { if (fcn!='attack') {
        bod2.setFc(u,'attack'); 
        //var a={x:-70,y:-60,w:60,h:30};
        //bod2.attacks.push({x:u.mx+(u.mirror?-a.x-a.w:a.x),y:u.my+a.y,w:a.w,h:a.h,t:250,u:u});
      }}
      else if (inp==4) { if (fcn!='cidle') bod2.setFc(u,'cidle'); }
      else if (inp==1) { if (u.mirror||(fcn!='run')) { u.mirror=false;bod2.setFc(u,'run'); }}
      else if (inp==2) { if (!u.mirror||(fcn!='run')) { u.mirror=true;bod2.setFc(u,'run'); }} 
      else { if (!keepRunning&&(fcn!='idle')) bod2.setFc(u,'idle'); }
      }
    }
    
    //if (1)
    function drawFlakes(ct,ox,oy,sc,background) {
      var cw=bod2.canvas.width,ch=bod2.canvas.height;
      for (var i=flakes.length-1;i>=0;i--) {
        var f=flakes[i],w=f.w*sc;
        if (background) {
          if (f.w>40) continue;
        } else {
          if (f.w<=40) continue;
        }
        ct.drawImage(f.img,
          (ox*f.w/40+Math.sin(t*0.005+f.w)*w+(cw+w)*(100+f.ox))%(cw+w)-w,
          (oy*f.w/40+t*0.002*w              +(ch+w)*(100+f.oy))%(ch+w)-w,
          w,w);
      }
      //...
    }
    
    if (0) {
    
    bod2.extDraw0=function(ct,ox,oy,sc) {
      drawFlakes(ct,ox,oy,sc,1);
    }
    bod2.extDraw1=function(ct,ox,oy,sc) {
      drawFlakes(ct,ox,oy,sc,0);
    }
    
    } else if (1) bod2.extDraw0=function(ct,ox,oy,sc) {
      //ct.save();
      //ct.globalCompositeOperation='overlay';
      if (!bgimg) return;
      ct.globalAlpha=0.3;var f=1/3;
      var w=window.innerWidth,h=window.innerHeight;
      ct.drawImage(bgimg,
        ox*f-400*sc*f+0.8*w*f*sc/2,
        oy*f-400*sc*f+0.8*h*f*sc/2,bgimg.width*sc*f,bgimg.height*sc*f);//,200,200);
      ct.globalAlpha=1;
      //ct.restore();
    }
    
    var vh='0.289 ';//FOLDORUPDATEVERSION
    
    Menu.init([
    mleft={s:'\u2190',ms:'<br><br><br>Bod2 '+bod2.version,px:0.02,py:0.02,pw:0.116,ph:0.116,ydown:true,fs:1.4,keys:[65,37]},
    mright={s:'\u2192',ms:'<br><br><br>'+vh,px:0.12,py:0.02,pw:0.116,ph:0.116,ydown:true,fs:1.4,keys:[68,39]},
    mattack={s:'\u270a',px:0.02,py:0.12,pw:0.116,ph:0.116,ydown:true,xright:true,fs:1.4,keys:[69,96,87]},//E,num-0,W
    mdown={s:'&#x1F6E1;',px:0.02,py:0.02,pw:0.116,ph:0.116,ydown:true,xright:true,fs:1.4,keys:[40,83]},
    ],{listen:1});
    Menu.draw();
    Sound.vol=0.5;
  }
  
  function loaded(v) {
    fos[this.fn]=v;//JSON.parse(v);
    //...
    loadCount++;
    if (loadCount==loadFiles.length) onload();
  }
  
  if (url.map) mapfn=url.map;
  loadFiles.push(mapfn);
  for (var k in url) if (url.hasOwnProperty(k)) 
    if (k.startsWith('file')) loadFiles.push(url[k]);
  for (var i=0;i<loadFiles.length;i++) 
    Conet.download({fn:loadFiles[i],f:loaded});
  
  //...
}
</script>
</head>
<body bgcolor="#555" onload="jnr();">
<canvas id="canvas" width="500" height="600"></canvas>
</body>
</html><script>
//fr o,16,5,78
//fr o,16,5,78,3
//fr o,16,5,110
//fr o,16,5,120
//fr p,42,15
